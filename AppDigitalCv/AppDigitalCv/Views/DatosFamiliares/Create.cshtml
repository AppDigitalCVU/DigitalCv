@using AppDigitalCv.Security
@model AppDigitalCv.ViewModels.FamiliaresVM
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "myForm", id = "myForm" }))
{
    @Html.AntiForgeryToken()

    <div class="bs-container content" style="min-height:960px;">
        <section class="content-header">
            <h1>
                Agregar Datos de Familiares
                <small>(Agregar)</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"> <i class="fa fa-dashboard"></i> Inicio </a></li>
                <li> <a href="#"> Datos</a></li>
                <li class="active"> Datos de tus Familiares </li>
            </ol>
        </section>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <h5 class="box-title">
                            <label class="text-success emailtitleletter">
                                <i class="text-success fa fa-graduation-cap"></i>
                                @SessionPersister.AccountSession.NombreCompleto
                            </label>
                        </h5>

                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                        <!-- /.box-tools -->
                    </div>
                    <div class="box-body">
                        <div role="form" class="form-inline">
                            <div class="form-group">
                                <label>Padre:&nbsp;&nbsp;</label>
                                @Html.TextBoxFor(model => model.PadreVM.StrNombre, new { @class = "form-control input-sm", placeholder = "Nombre Completo", required = "required", title = "Nombre completo de tu familiar" })
                            </div>
                            <div class="form-group">
                                <label></label>
                                @Html.RadioButtonFor(model=>model.PadreVM.BitVive,true,htmlAttributes:new {id = "rdbPadreVive",name= "rdbPadreVive" })<text>Vivo</text>
                                @Html.RadioButtonFor(model=>model.PadreVM.BitVive,false, htmlAttributes: new { id = "rdbPadreFinado", name = "rdbPadreFinado" })<text>Finado</text>
                            </div>
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.PadreVM.StrDomicilio, new { @class = "form-control input-sm", placeholder = "Domicilio Completo", required = "required", title = "Domicilio de tu familiar", size = "35" ,id= "domiciliopadre" })
                            </div>
                            <div class="form-group">
                                <label>Ocupación:</label>
                                @Html.TextBoxFor(model => model.PadreVM.StrOcupacion, new { @class = "form-control input-sm", placeholder = "Ocupación", required = "required", title = "Datos de la Ocupación", size = "10",id= "ocupacionpadre" })
                            </div>
                            <div class="form-group">
                                <label>Edad:</label>
                                @Html.TextBoxFor(model => model.PadreVM.IntEdad, new { @class = "form-control input-sm", placeholder = "Edad", required = "required", title = "Edad del Familiar", size = "1", type = "Number",id= "edadpadre" })
                            </div>
                        </div>
                        <br />
                        <div class="form-inline">
                            <div class="form-group">
                                <label>Madre:&nbsp;</label>
                                @Html.TextBoxFor(model => model.MadreVM.StrNombre, new { @class = "form-control input-sm", placeholder = "Nombre Completo", required = "required", title = "Nombre completo de tu familiar" })

                            </div>
                            <div class="form-group">
                                <label></label>
                                @Html.RadioButtonFor(model => model.MadreVM.BitVive, true, htmlAttributes: new { id = "rdbMadreVive", name = "rdbMadreVive" })<text>Vivo</text>
                                @Html.RadioButtonFor(model => model.MadreVM.BitVive, false, htmlAttributes: new { id = "rdbMadreFinado", name = "rdbMadreFinado" })<text>Finado</text>
                            </div>
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.MadreVM.StrDomicilio, new { @class = "form-control input-sm", placeholder = "Domicilio Completo", required = "required", title = "Domicilio de tu familiar", size = "35",id="domiciliomadre" })
                            </div>
                            <div class="form-group">
                                <label>Ocupación:</label>
                                @Html.TextBoxFor(model => model.MadreVM.StrOcupacion, new { @class = "form-control input-sm", placeholder = "Ocupación", required = "required", title = "Datos de la Ocupación", size = "10",id="ocupacionmadre" })
                            </div>
                            <div class="form-group">
                                <label>Edad:</label>
                                @Html.TextBoxFor(model => model.MadreVM.IntEdad, new { @class = "form-control input-sm", placeholder = "Edad", required = "required", title = "Edad del Familiar", size = "1", type = "Number",id="edadmadre" })
                            </div>
                        </div>
                        <br />
                        <div class="form-inline">
                            <div class="form-group">
                                <label>Pareja:&nbsp;</label>
                                @Html.TextBoxFor(model => model.ParejaVM.StrNombre, new { @class = "form-control input-sm", placeholder = "Nombre de tu esposo(a)", required = "required", title = "Nombre completo de tu familiar" })
                            </div>
                            <div class="form-group">
                                <label></label>
                                @Html.RadioButtonFor(model => model.ParejaVM.BitVive, true, htmlAttributes: new { id = "rdbParejaVive", name = "rdbParejaVive" })<text>Vivo</text>
                                @Html.RadioButtonFor(model => model.ParejaVM.BitVive, false, htmlAttributes: new { id = "rdbParejaFinado", name = "rdbParejaFinado" })<text>Finado</text>
                            </div>
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.ParejaVM.StrDomicilio, new { @class = "form-control input-sm", placeholder = "Domicilio Completo", required = "required", title = "Domicilio de tu familiar", size = "35", id = "domiciliopareja" })
                            </div>
                            <div class="form-group">
                                <label>Ocupación:</label>
                                @Html.TextBoxFor(model => model.ParejaVM.StrOcupacion, new { @class = "form-control input-sm", placeholder = "Ocupación", required = "required", title = "Datos de la Ocupación", size = "10", id = "ocupacionpareja" })
                            </div>
                            <div class="form-group">
                                <label>Edad:</label>
                                @Html.TextBoxFor(model => model.ParejaVM.IntEdad, new { @class = "form-control input-sm", placeholder = "Edad", required = "required", title = "Edad del Familiar", size = "1", type = "Number",id="edadpareja" })
                            </div>
                            <br />
                            <div class="form-group">
                                <br />
                                <input type="submit" class="btn btn-sm btn-success" value="Guardar" />
                            </div>

                        </div>

                    </div>
                    <div class="box-footer">


                        <div>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts
{
    <script>
        $(document).ready(function () {

            var valor = $('#rdbPadreVive').change(function () {
                $('#ocupacionpadre').prop('disabled', false).css("border-bottom-color", "#00a65a");
                $('#domiciliopadre').prop('disabled', false).css("border-bottom-color", "#00a65a");
                $('#edadpadre').prop('disabled', false).css("border-bottom-color", "#00a65a");
            });

            var padreFinado = $('#rdbPadreFinado').change(function () {
                $('#ocupacionpadre').prop('disabled', true).css("border-bottom-color", "#f39c12");
                $('#domiciliopadre').prop('disabled', true).css("border-bottom-color", "#f39c12");
                $('#edadpadre').prop('disabled', true).css("border-bottom-color", "#f39c12");
            });

            var madreVivo = $('#rdbMadreVive').change(function () {
                $('#ocupacionmadre').prop('disabled', false).css("border-bottom-color", "#00a65a");
                $('#domiciliomadre').prop('disabled', false).css("border-bottom-color", "#00a65a");
                $('#edadmadre').prop('disabled', false).css("border-bottom-color", "#00a65a");
            });
            var madreFinado = $('#rdbMadreFinado').change(function () {
                $('#ocupacionmadre').prop('disabled', true).css("border-bottom-color", "#f39c12");
                $('#domiciliomadre').prop('disabled', true).css("border-bottom-color", "#f39c12");
                $('#edadmadre').prop('disabled', true).css("border-bottom-color", "#f39c12");
            });

            var parejaVivo = $('#rdbParejaVive').change(function () {
                $('#ocupacionpareja').prop('disabled', false).css("border-bottom-color", "#00a65a");
                $('#domiciliopareja').prop('disabled', false).css("border-bottom-color", "#00a65a");
                $('#edadpareja').prop('disabled', false).css("border-bottom-color", "#00a65a");
            });
            var parejaFinado = $('#rdbParejaFinado').change(function () {
                $('#ocupacionpareja').prop('disabled', true).css("border-bottom-color", "#f39c12");
                $('#domiciliopareja').prop('disabled', true).css("border-bottom-color", "#f39c12");
                $('#edadpareja').prop('disabled', true).css("border-bottom-color", "#f39c12");
            });

            //$('#myForm input').on('change', function () {


            //    //var valor = $('input[name=rdbPadreVive]:checked', '#myForm').val();
                
            //    if (valor.trim() === "Vivo") {
            //        $('#ocupacionp').prop('disabled', false).css("border-bottom-color", "#00a65a");
            //        $('#domicilioP').prop('disabled', false).css("border-bottom-color", "#00a65a");
            //        $('#edadp').prop('disabled', false).css("border-bottom-color", "#00a65a");
            //    }
            //    if (valor.trim() === "Finado") {

            //        $('#ocupacionp').prop('disabled', true).css("border-bottom-color", "#f39c12");
            //        $('#domicilioP').prop('disabled', true).css("border-bottom-color", "#f39c12");
            //        $('#edadp').prop('disabled', true).css("border-bottom-color", "#f39c12");
            //        //$('#containerEnfermedades').hide();
            //        //$('#containerOtra').hide();
            //    }


            //});
        });
    </script>
}